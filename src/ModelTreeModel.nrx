package com.rvjansen
import javax.swing.
/**
 * Class ModelTreeModel implements... 
 * <BR>
 * Created on: zo, 13, okt 2013 18:18:31 +0200
 */
class ModelTreeModel implements TreeModel
  properties private
  client = KBClient
  modelMap = TreeMap()
  /**
   * Default constructor
   */
  method ModelTreeModel()
    this.client = KBClient('') -- defaults to localhost
    
  method getRoot() returns Object
    m = ModelObject("'8701860C-F92A-495B-A0BF-C76316DE647C'",'Object')
    a = ArrayList()
    a.add('dummy for treeroot')
    modelMap.put(m,a)
    return m

  method getChildCount(mob=Object) returns int
    do 
      obArray = ArrayList()
      m = ModelObject mob
      do
	a = client.getDescriptorsForID(m.getID())
	i = a.iterator()
	loop while i.hasNext()
	  idd = Rexx i.next()
	  ob = ModelObject(idd,"is described by" client.getNameForID(idd))
	  obArray.add(ob)
	end
      catch NullPointerException
	a = ArrayList()
      end -- do
      do
	b = client.getSchemesForTaxon(m.getID())
	j = b.iterator()
	loop while j.hasNext()
	  idd = Rexx j.next()
	  ob = ModelObject(idd,"is classified by" client.getNameForID(idd))
	  obArray.add(ob)
	end
      catch NullPointerException
	b = ArrayList()
      end -- do
      do
	c = client.getDomainsForScheme(m.getID())
	k = c.iterator()
	loop while k.hasNext()
	  idd = Rexx k.next()
	  ob = ModelObject(idd,client.getNameForID(idd))
	  obArray.add(ob)
	end
      catch NullPointerException
	c = ArrayList()
      end -- do -- if do
      
      modelMap.put(m,obArray)
      return a.size()+b.size()+c.size()
    catch java.rmi.RemoteException
      say 'remoteexception in ModelTreeModel.getChildCount'
      return 0
    end -- do
    
  method getChild(parent=Object, index=int) returns Object
    rs = ArrayList modelMap.get(parent)
    return ModelObject rs.get(index)
    
  method getIndexOfChild(parent=Object,child=Object) returns int
    p = ModelObject parent
    c = ModelObject child
    a = ArrayList modelMap.get(p)
    i = a.iterator()
    counter = 0
    loop while i.hasNext()
      l = ModelObject i.next()
      if l = c then return counter
      counter = counter + 1
    end
    return 0

  method isLeaf(node=Object) returns boolean
    return getChildCount(node) == 0

  method addTreeModelListener(t=TreeModelListener)

  method removeTreeModelListener(t=TreeModelListener)

  method valueForPathChanged(path=TreePath,newValue=Object)

  method isTrue(req) returns boolean signals java.rmi.RemoteException
    a = client.request(req)
    if a = null then return 0
    if a.size() = 1 then return 1
    else return 0
    