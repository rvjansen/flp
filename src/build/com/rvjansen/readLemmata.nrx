package com.rvjansen
import com.eaio.uuid.UUID
/**
 * Class readLemmata reads the language lemma files and stores them in the repository
 * with the appropriate types attached 
 * <BR>
 * Created on: do, 12, sep 2013 20:24:18 +0200
 */
class readLemmata

  properties private
  defMap             = TreeMap()
  /**
   * Default constructor
   */
  method readLemmata()

    -- for all language files:
    out = PrintWriter(BufferedWriter(FileWriter('lemmata.prolog')))
    --languages = 'cat cmn dan eng eus fas fin glg ind ita jpn nno nob pol por spa tha zsm'
    languages = 'fra'
    loop i = 1 to languages.words()
      lang = languages.word(i)
      say 'reading' lang
      in = BufferedReader(FileReader("../files/sources/wn-data-"lang".tab"))
      line = ''
      loop forever
	line = Rexx in.readLine()
	if line = null then leave
	if line.left(1) = '#' then iterate
	parse line id '-'type'\tlemma\t'w
	w = w.translate("\u2019","'")
	id = type.translate('1234','nvar')||id
	lemma_ = Lemma()
	lemma_.setLemma_uuid(newUUID())
	lemma_.setLanguage(lang)
	lemma_.setChars(w)
	lemma_.setSynset(id)
	lemma_.setPartOfSpeech(type)
	lemma_.persist()
      end
    end -- loop i
    out.close()

  method newUUID() returns String static
    return UUID().toString.toUpperCase

    
  method main(args=String[]) static
    readlemmata()
