package com.rvjansen
import com.eaio.uuid.UUID
import java.rmi.

class Fact
  
  properties indirect
  pred  = '' -- predicate
  subj  = '' -- subject
  obj   = '' -- object
  
  method Fact() -- default no-args constructor
    
  method Fact(pred_, subj_, obj_)
    this.pred  = de_apo(pred_)
    this.subj  = de_apo(subj_)
    this.obj   = de_apo(obj_)
    
  method toString() returns String
    return "'"this.pred"'('"this.subj"','"this.obj"')."
    
  method toAssertion() returns String
    return "assertz('"this.pred"'('"this.subj"','"this.obj"'))."
    
  method toRetraction() returns String
    return "retract('"this.pred"'('"this.subj"','"this.obj"'))."
    
  method setPred(arg)
    this.pred = de_apo(arg)
    
  method setSubj(arg)
    this.subj = de_apo(arg)
    
  method setObj(arg)
    this.obj = de_apo(arg)
        
  method de_apo(arg)
    if arg == null then
      do
	say 'nullpointer in Fact.de_apo'
	return ''
      end
    arg = arg.strip('b','"')
    arg = arg.strip('b',"'")
    return arg

  /**
   * write the current Fact to the specified output handle
   */     
  method write(out=PrintWriter)
    out.println(this.toString())
    
  /**
   * persist the current Fact to the specified output handle
   * (persisting is pedantic for writing) 
   */     
  method persist(out=PrintWriter)
    out.println(this.toString())
    
  method assertz(api=KBServerInterface) signals RemoteException
    api.request(KBRequest(this.toAssertion()))
    
  method retract(api=KBServerInterface) signals RemoteException
    api.request(KBRequest(this.toRetraction()))
    
  /**
   * read the fact from inputhandle and parse up into components
   */
    
  method read(in=BufferedReader)
    line    = Rexx in.readLine()
    if line = null then return null
    parse line "'"pred_"'('"subj_"','"obj_"')"
    this.setPred(pred_.strip)
    this.setSubj(subj_.strip)
    this.setObj(obj_.strip)
    return 1

  method readFix(in=BufferedReader)
    line    = Rexx in.readLine()
    if line = null then return null
    parse line "'"pred_"'("subj_","obj_")"
    this.setPred(pred_.strip)
    this.setSubj(subj_.strip)
    this.setObj(obj_.strip)
    return 1
    
